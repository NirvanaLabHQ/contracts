{
  "address": "0x08c89ea9F6a4140dE96f335162aB89251b210DAf",
  "abi": [],
  "transactionHash": "0x147454fb18148d797076dd82ce1b798d65e0aed2c13d15bd839265174a227345",
  "receipt": {
    "to": null,
    "from": "0xe0B4c9C36f5A5D0Ff3A547FeaBB6BC9Ba65805F2",
    "contractAddress": "0x08c89ea9F6a4140dE96f335162aB89251b210DAf",
    "transactionIndex": 1,
    "gasUsed": "119284",
    "logsBloom": "0x
    "blockHash": "0x0d3d08f50917854de75d4476ee5798efe52b4ff52483fba2d3387c9e76515e90",
    "transactionHash": "0x147454fb18148d797076dd82ce1b798d65e0aed2c13d15bd839265174a227345",
    "logs": [],
    "blockNumber": 27773224,
    "cumulativeGasUsed": "252294",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "88551474ac7d667cbb6243b62e37c485",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(FastArray.Data storage,uint256)\":{\"notice\":\"PLease confirm index is not out of bounds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/FastArray.sol\":\"FastArray\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363738303037313639313639\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/FastArray.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.17;\\n\\n// A simple array that supports insert and removal.\\n// The values are assumed to be unique and the library is meant to be lightweight.\\n// So when calling insert or remove, the caller is responsible to know whether a value already exists in the array or not.\\nlibrary FastArray {\\n    struct Data {\\n        mapping(uint256 => uint256) array;\\n        mapping(uint256 => uint256) indexMap;\\n        uint256 length;\\n    }\\n\\n    /**\\n     * @notice please confirm no eq item exist before insert\\n     */\\n    function insert(Data storage _fastArray, uint256 _value) internal {\\n        _fastArray.array[_fastArray.length] = _value;\\n        _fastArray.indexMap[_value] = _fastArray.length;\\n        _fastArray.length += 1;\\n    }\\n\\n    /**\\n     * @dev remove item from array,but not keep rest item sort\\n     * @notice Please confirm array is not empty && item is exist && index not out of bounds\\n     */\\n    function remove(Data storage _fastArray, uint256 _value) internal {\\n        uint256 index = _fastArray.indexMap[_value];\\n\\n        _fastArray.array[index] = _fastArray.array[_fastArray.length - 1];\\n        delete _fastArray.indexMap[_value];\\n        delete _fastArray.array[_fastArray.length - 1];\\n\\n        _fastArray.length -= 1;\\n    }\\n\\n    /**\\n     * @dev remove item and keep rest item in sort\\n     * @notice Please confirm array is not empty && item is exist && index not out of bounds\\n     */\\n    function removeKeepSort(Data storage _fastArray, uint256 _value) internal {\\n        uint256 index = _fastArray.indexMap[_value];\\n\\n        uint256 tempLastItem = _fastArray.array[_fastArray.length - 1];\\n\\n        for (uint256 i = index; i < _fastArray.length - 1; i++) {\\n            _fastArray.indexMap[_fastArray.array[i + 1]] = i;\\n            _fastArray.array[i] = _fastArray.array[i + 1];\\n        }\\n\\n        delete _fastArray.indexMap[tempLastItem];\\n        delete _fastArray.array[_fastArray.length - 1];\\n        _fastArray.length -= 1;\\n    }\\n\\n    /**\\n     * @notice PLease confirm index is not out of bounds\\n     */\\n    function get(\\n        Data storage _fastArray,\\n        uint256 _index\\n    ) public view returns (uint256) {\\n        return _fastArray.array[_index];\\n    }\\n\\n    function length(Data storage _fastArray) public view returns (uint256) {\\n        return _fastArray.length;\\n    }\\n\\n    function contains(\\n        Data storage _fastArray,\\n        uint256 _value\\n    ) public view returns (bool) {\\n        return _fastArray.indexMap[_value] != 0;\\n    }\\n}\\n\",\"keccak256\":\"0x1aafe47d78876fe514a190e95a87f4720f33617712c66cf95ab73c6dc3a19f3d\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x61013061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806317dce7e414604c57806324f9017a146071578063c9c3102d1460a3575b600080fd5b605e605736600460c1565b6002015490565b6040519081526020015b60405180910390f35b6094607c36600460d9565b60009081526001919091016020526040902054151590565b60405190151581526020016068565b605e60ae36600460d9565b6000908152602091909152604090205490565b60006020828403121560d257600080fd5b5035919050565b6000806040838503121560eb57600080fd5b5050803592602090910135915056fea2646970667358221220e1aaef61e2d8cc02aabb83df912efe19199af9f49e89e876cf728e862cb66c4164736f6c63430008110033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806317dce7e414604c57806324f9017a146071578063c9c3102d1460a3575b600080fd5b605e605736600460c1565b6002015490565b6040519081526020015b60405180910390f35b6094607c36600460d9565b60009081526001919091016020526040902054151590565b60405190151581526020016068565b605e60ae36600460d9565b6000908152602091909152604090205490565b60006020828403121560d257600080fd5b5035919050565b6000806040838503121560eb57600080fd5b5050803592602090910135915056fea2646970667358221220e1aaef61e2d8cc02aabb83df912efe19199af9f49e89e876cf728e862cb66c4164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(FastArray.Data storage,uint256)": {
        "notice": "PLease confirm index is not out of bounds"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}